trigger:
  batch: true
  branches:
    include:
      - master
      - dev

pr:
  autoCancel: true
  branches:
    include:
      - master
      - dev

jobs:
  - job: xFunc
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      solution: 'xFunc.sln'
      buildConfiguration: 'Release'

    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET 7'
      inputs:
        packageType: 'sdk'
        version: '7.0.x'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: restore
        projects: '$(solution)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        projects: '$(solution)'
        arguments: '--nologo -c $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: test
        projects: '$(solution)'
        arguments: '--nologo --no-build -c $(buildConfiguration) --collect:"XPlat Code Coverage" --settings runsettings.xml'
        publishTestResults: true

    - task: DotNetCoreCLI@2
      displayName: 'Generate Report'
      inputs:
        command: custom
        custom: msbuild
        projects: '$(solution)'
        arguments: '-p:Configuration=$(buildConfiguration) -p:_PathToCopy="$(Agent.TempDirectory)/**/coverage.cobertura.xml" -target:"xFunc_Tests:GenerateHtmlCoverageReport"'

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(Build.SourcesDirectory)/coverage/coverage.cobertura.xml'
        pathToSources: '$(Build.SourcesDirectory)/coverage/'
        failIfCoverageEmpty: true

    - bash: bash <(curl -s https://codecov.io/bash) -Z -f "./coverage/coverage.cobertura.xml"
      displayName: 'Publish to Codecov'
      env:
        CODECOV_TOKEN: $(CODECOV_TOKEN)
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs:
        command: 'pack'
        packagesToPack: '$(solution)'
        outputDir: 'nupkgs'
        nobuild: true
        includesymbols: true

    - task: PublishPipelineArtifact@1
      inputs:
        path: xFunc.Maths/bin/Release/netstandard2.1
        artifact: xFunc.Maths

    - task: PublishPipelineArtifact@1
      inputs:
        path: nupkgs
        artifact: NuGet Packages