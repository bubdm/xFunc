<!-- Copyright 2012-2013 Dmitry Kischenko

Licensed under the Apache License, Version 2.0 (the "License"); 
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software 
distributed under the License is distributed on an "AS IS" BASIS, 
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
express or implied. 
See the License for the specific language governing permissions and 
limitations under the License. -->
<Window x:Class="xFunc.Views.VariableView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewModes="clr-namespace:xFunc.ViewModels"
        xmlns:res="clr-namespace:xFunc.Resources"
        xmlns:conv="clr-namespace:xFunc.Converters"
        xmlns:exps="clr-namespace:xFunc.Maths.Expressions;assembly=xFunc.Maths"
        Title="{x:Static res:Resource.VariablesTitle}" Width="220" Height="280"
        ShowInTaskbar="False">
    <Window.Resources>
        <conv:MathParameterTypeToStringConverter x:Key="typeToStr" />
    </Window.Resources>
    
    <ListView ItemsSource="{Binding}">
        <ListView.GroupStyle>
            <GroupStyle>
                <GroupStyle.ContainerStyle>
                    <Style TargetType="{x:Type GroupItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                    <Expander IsExpanded="True">
                                        <Expander.Header>
                                            <TextBlock Foreground="#FF27276C" FontWeight="Medium" Text="{Binding Path=Name, Converter={StaticResource typeToStr}}" />
                                        </Expander.Header>
                                        <Expander.Content>
                                            <ItemsPresenter />
                                        </Expander.Content>
                                    </Expander>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </GroupStyle.ContainerStyle>
            </GroupStyle>
        </ListView.GroupStyle>
        <ListView.ItemContainerStyle>
            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=Type}">
                        <DataTrigger.Value>
                            <exps:MathParameterType>Constant</exps:MathParameterType>
                        </DataTrigger.Value>
                        <Setter Property="Foreground" Value="Gray" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Type}">
                        <DataTrigger.Value>
                            <exps:MathParameterType>ReadOnly</exps:MathParameterType>
                        </DataTrigger.Value>
                        <Setter Property="Foreground" Value="Gray" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ListView.ItemContainerStyle>
        <ListView.View>
            <GridView>
                <GridViewColumn Header="{x:Static res:Resource.VarNameHeader}">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Variable}" TextAlignment="Center" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Header="{x:Static res:Resource.VarValueHeader}" DisplayMemberBinding="{Binding Path=Value}" />
            </GridView>
        </ListView.View>
    </ListView>
</Window>
